I"9[<p>The aim of this tutorial is to give a numerical method for solving a partial differential equation with a constant delay.</p>

<h2 id="introduction">Introduction</h2>

<p>We consider the following one-dimentional reaction-diffusion equation with logistic production and delayed term,</p>

<script type="math/tex; mode=display">\frac{\partial u}{ \partial t} = D \frac{\partial^2 u}{\partial x^2} + r u( 1-u -  f(u_{\tau})),</script>

<p>this equation was suggested in [1] as a model of viral infection spreading in tissues. For the existence of solution and Global stability of the homogeneous in space equilibrium we refer the reader to [2]. Here, $u(x,t)$ is the concentration of virus with respect to the space variable $x$ and time $t$. The parameters $D$ and $r$ are respectively the diffusion coefficient and replication rate constant. The function $f(u_{\tau})$ describes the concentration of immune cells as a function of the virus concentration at time $t-\tau, u_{\tau}(x, t) = u(x, t - \tau)$.</p>

<h2 id="numerical-method">Numerical method</h2>

<p>We rewrite the one-dimentional reaction-diffusion equation with a constant time delay described above with Neumann boundary condition:</p>

<script type="math/tex; mode=display">% <![CDATA[
\begin{equation} \begin{cases} \frac{\partial u}{ \partial t} = D \frac{\partial^2 u}{\partial x^2} + r u( 1-u -  f(u_{\tau})), & (x,t) \in (0,L) \times (0,T), \\ \frac{\partial u(x,t)}{ \partial n}=0, & x \in \{0,L\}, \quad t \in (0,T), \\ u(x,t)=u_0(x,t),     & (x,t) \in [0,L] \times [- \tau,0]. \end{cases} \label{equa1} \end{equation} %]]></script>

<p>where the delay $\tau$ is a positive constant. we use an implicit finite difference approximation for the diffusion term and classical approach of the resolution of delay equations.  let N and M denote the number of space steps and time steps with the notations $\Delta x= L/N$ and $\Delta t= T/M$, respectively.</p>

<p>The discretization of space $x_i$ and time $t_n$ are given by</p>

<script type="math/tex; mode=display">x_i=i\Delta x, \qquad i=0,...,N,</script>

<script type="math/tex; mode=display">t_n=n\Delta t, \qquad n=0,...,M.</script>

<p>Let $u^n_i$  be the approximation of the function $u$ at $(x,t)=(x_i,t_n)$, moreover,</p>

<script type="math/tex; mode=display">\left( \frac{\partial u}{ \partial t} \right)^{n+1}_i= \frac{u^{n+1}_i-u^{n}_i}{\Delta t}, \qquad \left( \frac{\partial^2 u}{ \partial x^2} \right)^{n+1}_i= \frac{u^{n+1}_{i+1}-2 u^{n+1}_i+u^{n+1}_{i-1}}{\Delta x},</script>

<p>We write the scheme of the equation (\ref{equa1}) at the point $u^n_i$,</p>

<script type="math/tex; mode=display">% <![CDATA[
\begin{cases} \frac{ u^{n+1}_i- u^n_i}{  \Delta t} = D \frac{u^{n+1}_{i+1}-2 u^{n+1}_i+u^{n+1}_{i-1}}{\Delta x} + r u^n_i( 1-u^n_i -  f(u^{n-k}_i)), & i=1,..,N-1, \quad n=0,..,M-1 \\ u^{n+1}_1=u^{n+1}_0, \quad u^{n+1}_{N}=u^{n+1}_{N-1} , & n=0,..,M-1, \\ u^{n-k}_i=u_0(x_i,t_n-\tau),     & i=0,..,N, \quad n=1,..,k.\\ \end{cases} %]]></script>

<p>Where, $u^{n-k}_i \approx u(x_i,t_n-\tau)$ is the delay variable and $k$ is determined by the equality $\tau= k \Delta t$. For simplicity of notation, we denote by $F^{n-k}_i := f(u^{n-k}_i)$ and $G^{n,k}_i:=r u^n_i( 1-u^n_i -  F^{n-k}_i)$, for $i=0,..,N-1, \quad n=1,..,k$ and $n=0,..,M-1$.</p>

<p>The simplest form of this expression is given as follows</p>

<script type="math/tex; mode=display">- \lambda u^{n+1}_{i+1} + (1+2\lambda) u^{n+1}_i - \lambda u^{n+1}_{i-1} = u^n_i + G^{n,k}_i, \text{ for } i=0,..,N-1,</script>

<p>where $\lambda= D \Delta t /(\Delta x)^2$.</p>

<p>Now, we can write the following semi-linear system with Neumann boundary condition</p>

<script type="math/tex; mode=display">% <![CDATA[
\begin{equation*} \begin{array}{lll} \left( \begin{array}{ccccc} 1+\lambda 	&-\lambda	  &             &		\dots 		& 0		\\ -\lambda 		&1+2\lambda 	  		& -\lambda 	&    & 	\vdots	\\ \vdots		&\ddots       & \ddots		&       \ddots 		&	\\ &             &  -\lambda   &       1+2\lambda	& -\lambda	 \\ 0 & 		\dots		& 	&-\lambda	& 1+\lambda \end{array} \right) \left( \begin{array}{c} U_1 \\ U_2 \\ \vdots \\ \\ U_{N-2} \\ U_{N-1}	 . \end{array} \right)^{n+1} =  \left( \begin{array}{c} U_1 \\ U_2 \\ \vdots \\  \\  U_{N-2} \\ U_{N-1}	 .  \end{array} \right)^{n} +  \left( \begin{array}{c} G_1 \\ G_2 \\ \vdots \\ \\ G_{N-2} \\ G_{N-1}	 . \end{array} \right)^{n,k}


\end{array} \end{equation*} %]]></script>

<p>First, we fix the parametrs as follows $T=10$, $\tau=1$, $L=1$, $D=1$, $r=1$,</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">clear</span> <span class="p">;</span>
<span class="nb">close</span> <span class="p">;</span>
<span class="nb">clc</span><span class="p">,</span>
<span class="nb">tic</span>
<span class="n">T</span><span class="o">=</span><span class="mi">10</span><span class="p">;</span>
<span class="n">M</span><span class="o">=</span><span class="mi">100</span><span class="p">;</span>
<span class="n">L</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
<span class="n">epsilon</span><span class="o">=</span><span class="mi">10</span><span class="o">^</span><span class="p">(</span><span class="o">-</span><span class="mi">6</span><span class="p">);</span>
<span class="n">D</span><span class="o">=</span><span class="mf">0.01</span><span class="p">;</span>
<span class="n">r</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
<span class="n">to</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span>
<span class="n">N</span><span class="o">=</span><span class="mi">200</span><span class="p">;</span>
<span class="n">dx</span><span class="o">=</span><span class="n">L</span><span class="p">/(</span><span class="n">N</span><span class="p">);</span>
<span class="n">dt</span><span class="o">=</span><span class="n">T</span><span class="p">/</span><span class="n">M</span><span class="p">;</span>
<span class="n">x</span><span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">:</span><span class="n">N</span><span class="p">)</span><span class="o">*</span><span class="n">dx</span> <span class="p">;</span>
<span class="n">lambda</span><span class="o">=</span><span class="n">dt</span><span class="o">*</span><span class="n">D</span><span class="p">/(</span><span class="n">dx</span><span class="o">^</span><span class="mi">2</span><span class="p">);</span>
<span class="n">t</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">:</span><span class="n">M</span><span class="p">)</span><span class="o">*</span><span class="n">dt</span><span class="p">;</span>
</code></pre></div></div>

<p>The tridiagonal matrix with Neumann condition</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">C</span><span class="o">=</span><span class="nb">eye</span><span class="p">(</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
<span class="n">D</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">lambda</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">C</span><span class="o">-</span><span class="n">lambda</span><span class="o">*</span><span class="nb">diag</span><span class="p">(</span><span class="nb">ones</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">N</span><span class="p">),</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="n">lambda</span><span class="o">*</span><span class="nb">diag</span><span class="p">(</span><span class="nb">ones</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">N</span><span class="p">),</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
<span class="n">B</span><span class="o">=</span><span class="p">[[</span><span class="o">-</span><span class="n">lambda</span><span class="p">;</span><span class="nb">zeros</span><span class="p">(</span><span class="n">N</span><span class="p">,</span><span class="mi">1</span><span class="p">)]</span> <span class="p">[</span><span class="nb">zeros</span><span class="p">(</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">N</span><span class="o">-</span><span class="mi">1</span><span class="p">)]</span> <span class="p">[</span><span class="nb">zeros</span><span class="p">(</span><span class="n">N</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="o">-</span><span class="n">lambda</span><span class="p">]];</span>
<span class="n">A</span><span class="o">=</span><span class="n">D</span><span class="o">+</span><span class="n">B</span><span class="p">;</span>
</code></pre></div></div>

<p>The initial function $u_0$</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">U</span><span class="o">=</span><span class="nb">zeros</span><span class="p">(</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>

<span class="k">for</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">:</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span>
    <span class="n">U</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">u0</span><span class="p">(</span><span class="n">x</span><span class="p">(</span><span class="n">i</span><span class="p">),</span><span class="mi">0</span><span class="p">);</span>
<span class="k">end</span>
<span class="nb">figure</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="nb">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">U</span><span class="p">)</span>
<span class="nb">xlabel</span><span class="p">(</span><span class="s1">'space'</span><span class="p">)</span>
<span class="nb">title</span><span class="p">(</span><span class="s1">'Initial function u_0(x)'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0030/copiaRM_01.png" alt="" /></p>

<p>The delay function $f(u_{\tau})$</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">f</span><span class="o">=@</span><span class="p">(</span> <span class="n">t</span> <span class="p">)</span> <span class="mi">2</span><span class="o">*</span><span class="n">t</span> <span class="p">;</span>
<span class="n">Q</span><span class="o">=</span><span class="nb">zeros</span><span class="p">(</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
<span class="k">for</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">:</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span>
 <span class="n">Q</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">f</span><span class="p">(</span><span class="n">x</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>   <span class="p">;</span>
<span class="k">end</span>

<span class="nb">figure</span> <span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">Q</span><span class="p">)</span>
<span class="nb">xlabel</span><span class="p">(</span><span class="s1">'space'</span><span class="p">)</span>
<span class="nb">title</span><span class="p">(</span><span class="s1">'The function f'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0030/copiaRM_02.png" alt="" /></p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Ut</span><span class="o">=</span><span class="nb">zeros</span><span class="p">(</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
<span class="n">Fretard</span><span class="o">=</span><span class="nb">zeros</span><span class="p">(</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
<span class="n">Uf</span><span class="o">=</span><span class="nb">zeros</span><span class="p">(</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">M</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
<span class="n">Uf</span><span class="o">=</span><span class="n">U</span><span class="p">;</span>
</code></pre></div></div>

<p>We introduce the following test to get $u(x, t-\tau)$,</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span> <span class="o">=</span>        <span class="nb">figure</span><span class="p">;</span>
<span class="n">ax</span>  <span class="o">=</span> <span class="nb">axes</span><span class="p">(</span><span class="s1">'Parent'</span><span class="p">,</span><span class="n">fig</span><span class="p">,</span><span class="s1">'XLim'</span><span class="p">,[</span><span class="mi">0</span> <span class="n">L</span><span class="p">],</span><span class="s1">'YLim'</span><span class="p">,[</span><span class="mi">0</span> <span class="mf">1.1</span><span class="p">]);</span>
<span class="n">ax</span><span class="o">.</span><span class="n">XLabel</span><span class="o">.</span><span class="n">String</span> <span class="o">=</span> <span class="s1">'space'</span><span class="p">;</span>

<span class="c1">%%gif('pdedelay4.gif','frame',fig,'DelayTime',1)</span>
<span class="k">for</span> <span class="n">n</span><span class="o">=</span><span class="mi">1</span><span class="p">:</span><span class="n">M</span>
    <span class="k">if</span> <span class="p">(((</span><span class="n">t</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">-</span><span class="n">to</span><span class="p">)</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">-</span><span class="n">to</span><span class="p">)</span><span class="o">&lt;</span><span class="n">epsilon</span><span class="p">))</span>
        <span class="k">for</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">:</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span>
            <span class="n">Ut</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">u0</span><span class="p">(</span><span class="n">x</span><span class="p">(</span><span class="n">i</span><span class="p">),</span><span class="n">t</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">-</span><span class="n">to</span><span class="p">);</span>
            <span class="n">Fretard</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">f</span><span class="p">(</span><span class="n">Ut</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span>
        <span class="k">end</span>
    <span class="k">else</span>
        <span class="n">s</span><span class="o">=</span><span class="nb">floor</span><span class="p">((</span><span class="n">t</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">-</span><span class="n">to</span><span class="p">)/</span><span class="n">dt</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
        <span class="k">for</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">:</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span>
            <span class="n">Ut</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">Uf</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">s</span><span class="p">);</span>
            <span class="n">Fretard</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">f</span><span class="p">(</span><span class="n">Ut</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span>
        <span class="k">end</span>
    <span class="k">end</span>
    <span class="n">Uold</span><span class="o">=</span><span class="n">U</span><span class="p">;</span>
    <span class="n">Ur</span><span class="o">=</span><span class="n">dt</span><span class="o">*</span><span class="n">r</span><span class="o">*</span><span class="n">Uold</span><span class="o">.*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">Uold</span><span class="o">-</span><span class="n">Fretard</span><span class="p">);</span>
    <span class="n">U</span><span class="o">=</span><span class="n">A</span><span class="p">\(</span><span class="n">Uold</span><span class="o">+</span><span class="n">Ur</span><span class="p">);</span>
    <span class="c1">%%</span>
    <span class="c1">%% We plot the evolution of solution $u(x,t)$ at</span>
    <span class="c1">%% $t= \Delta t, \tau, 2 \tau, 3\tau, ...$,</span>
    <span class="c1">%% when $\tau=0$, we plot the solution for $t=5, 10, 15, ...$</span>
    <span class="c1">%%</span>
    <span class="k">if</span> <span class="p">(((</span><span class="n">t</span><span class="p">(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">==</span><span class="n">dt</span><span class="p">)</span><span class="o">||</span> <span class="p">(</span><span class="nb">mod</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="n">to</span><span class="p">)</span><span class="o">==</span><span class="mi">0</span><span class="p">))</span> <span class="o">||</span> <span class="p">((</span><span class="n">to</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(((</span><span class="nb">mod</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="mi">5</span><span class="p">)</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="n">n</span><span class="o">==</span><span class="n">M</span><span class="p">)))))</span>

        <span class="n">ll</span> <span class="o">=</span><span class="nb">line</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">Uold</span><span class="p">,</span><span class="s1">'Color'</span><span class="p">,</span><span class="s1">'r'</span><span class="p">,</span><span class="s1">'Parent'</span><span class="p">,</span><span class="n">ax</span><span class="p">);</span>
        <span class="n">ax</span><span class="o">.</span><span class="n">Title</span><span class="o">.</span><span class="n">String</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'t='</span><span class="p">,</span><span class="nb">num2str</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">))];</span>
        <span class="nb">pause</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="c1">%%gif;</span>
        <span class="nb">delete</span><span class="p">(</span><span class="n">ll</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="n">Uf</span><span class="o">=</span><span class="p">[</span><span class="n">Uf</span><span class="p">,</span><span class="n">U</span><span class="p">];</span>
<span class="k">end</span>
</code></pre></div></div>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0030/pdedelay4.gif" alt="" /></p>

<p>The solution $u(x,t)$ of PDE with delay</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">figure</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span>
<span class="p">[</span><span class="n">X</span> <span class="p">,</span> <span class="n">Y</span><span class="p">]</span> <span class="o">=</span> <span class="nb">meshgrid</span><span class="p">(</span><span class="n">x</span><span class="p">,[</span><span class="n">t</span><span class="p">]);</span>
<span class="nb">mesh</span> <span class="p">(</span><span class="n">X</span> <span class="p">,</span> <span class="n">Y</span> <span class="p">,</span> <span class="n">Uf</span><span class="o">'</span><span class="p">)</span>
<span class="nb">title</span><span class="p">(</span><span class="s1">'The evolution of solution u(x,t)'</span><span class="p">)</span>
<span class="nb">xlabel</span><span class="p">(</span><span class="s1">'space'</span><span class="p">)</span>
<span class="nb">ylabel</span><span class="p">(</span><span class="s1">'time'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0030/copiaRM_03.png" alt="" /></p>

<h2 id="references">References</h2>

<p>[1]  G.Bocharov, A. Meyerhans, N. Bessonov, S. Trofimchuk, V. Volpert. Spatiotemporal dynamics of virus infection spreading in tissues. PlosOne, December 20, 2016.</p>

<p>[2]   T. M. Touaoula, M. N. Frioui, N. Bessonov, V. Volpert Dynamics of solutions of a reaction-diffusion equation with delayed inhibition. Manuscript submitted for publication.</p>

:ET