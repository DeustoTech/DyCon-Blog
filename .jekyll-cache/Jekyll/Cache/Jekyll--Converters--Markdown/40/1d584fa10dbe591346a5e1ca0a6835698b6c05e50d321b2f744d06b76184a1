I"¸(<h5>1. Numerical experiments</h5>

<p>Consider the one dimensional linear Vlasov-Fokker-Planck (VPFP) as following.</p>

<script type="math/tex; mode=display">\begin{equation}
\begin{cases}
	\delta_tf + \sigma_1v\delta_x f - \frac{\sigma_2}{\epsilon} \delta_x\phi\delta_v f =\frac{\sigma_3}{\epsilon}\delta_v\ (v f +\delta_vf\ ),  t>0, x\in[0,2\pi], v\in \mathbb{R}, \label{eq: VPFP}\\
	f(0, x,v,z) = f_0(x,v,z),  z\in [a,b].
	\end{cases}
\end{equation}</script>

<p>In the numerical experiments, <strong>we compare the results from the greedy algorithm with the results from the polynomial interpolation of the quadrature points.</strong> we set $\epsilon = 1, T = 0.5$ for all examples. More specifically, we set</p>

<script type="math/tex; mode=display">\text{error} = \sum_{i=1}^{50}\int{ {( \hat{f}(T, x, v, z_i) - f(T, x,v,z_i) )}^2} dxdv \hat{f}(T, x,v,z_i)</script>

<p>is the approximation solution obtained from either method, $f(T, x,v,z_i)$ is the exact solution. $z_i$ is uniformly chosen from $[a,b]$. ${\textbf{Dimension}}$ refers to the number of snap shots.</p>

<p>Observe Figure 1-6, we found that the Greedy algorithm converges to the solution faster than the other method. Especially, when there is discontinuity,  the polynomial interpolation doesn‚Äôt converge as dimension increases, however, the Greedy algorithm still converges and almost keeps the same convergent rate.</p>

<p><strong>Algorithm 1.1. The algorithm for the polynomial interpolation:</strong></p>

<p>For <strong>Dimension</strong> $= n$, ${\alpha_i}_{i=1}^n$ is the n roots of $n$-th order Legendre polynomial, and let</p>

<script type="math/tex; mode=display">\begin{equation}
	z_i ^\ast= \frac{b-a}{2}\alpha_i + \frac{a+b}{2},  1\leq i \leq n.\label{}
\end{equation}</script>

<script type="math/tex; mode=display">\begin{equation}
	f_i = f(T, x,v, z_i ^\ast) \text{ be the exact solution at time T}.\label{}
\end{equation}</script>

<p>Then by Lagrange interpolation,</p>

<script type="math/tex; mode=display">\begin{align}
	\hat{f}(T,x,v,z) = \sum_{i=1}^n l_i(z)f_i, l_i = \prod_{j\neq i} \frac{z-z_j ^\ast}{z_i ^\ast - z_j ^\ast}
\end{align}</script>

<h3>1.1 Linear VFP with parametric initial data</h3>
<p>In the first experiment, we consider the case where the parameter $z\in[1,5]$ only involved in the initial data,
<script type="math/tex">\begin{equation}
\sigma_1 = \sigma_2 = \sigma_3 = 1, \delta _x\phi = \cos(x),   
\end{equation}</script></p>

<p>Figure 1:</p>

<script type="math/tex; mode=display">\begin{equation} f_0(x,v,z) = \frac{1}{\sqrt{2\pi}} (2+\frac{\sin(x)}{z}) \text{exp} (-\frac{ |v+\cos(x) + \frac{z}{10} |^2}{2} ).\end{equation}</script>

<p>Figure 2:</p>

<script type="math/tex; mode=display">% <![CDATA[
\begin{equation} f_0(x,v,z) =\left\{
\begin{array}{rl}
\frac{1}{\sqrt{2\pi}} (2+\frac{\sin(x)}{z}) \text{exp} (-\frac{ |v+\cos(x) + \frac{z}{10} |^2}{2} ), z<3\\
\frac{1}{\sqrt{2\pi}} (2+\frac{\sin(x)}{z}) \text{exp} (-\frac{ |v+\cos(x) + \frac{z+1}{10} |^2}{2} ), z\geq3.
\end{array}
\right.\end{equation} %]]></script>

<p><strong>Algorithm 1.2. The algorithm for PDE with only parameter in initial data:</strong>
<strong>Offline:</strong></p>

<p>Step 1: Set $N = {z_i: z_i = i\delta_z, \delta_z = \frac{b-a}{N_z}, i = 0,1, \dots, N_z}$, we set $N_z = 100$ in this case.</p>

<script type="math/tex; mode=display">\begin{equation}
z_1^\ast = \text{argmax}_{z\in N} || f_0(x,v,z) || ^2,
\end{equation}</script>

<p>where $ \vert f \vert^2 = \int f^2 dxdv$.</p>

<p>Step 2: After obtaining $z_i^\ast, f_i = f_0(x,v,z_i^\ast)$, $i =1, \dots, n-1$,</p>

<script type="math/tex; mode=display">\begin{equation}
z_n^\ast = \text{argmax}_{z\in N\backslash\{z_i^\ast \}_{i=1}^{n-1} } || f_0(x,v,z) - P^{n-1} f_0(x,v,z) ||^2,
\end{equation}</script>

<p>where $P^{n-1} f_0$ is the projection onto the subspace spanned by $f_1, \dots, f_{n-1}$</p>

<p>Step 3: Stops when</p>

<script type="math/tex; mode=display">\begin{equation}
\max_{z\in N\backslash\{z_i^\ast\}_{i=1}^{n-1} } || f_0(x,v,z) - P^{n-1} f_0(x,v,z)||^2 \leq \epsilon
\end{equation}</script>

<p><strong>Online:</strong> After we obtained the snap shots ${z_i^\ast}_{i=1}^n$,</p>

<p>Step 1: Orthogonalize ${f_i}_{i=1}^n$,
         and calculate the corresponding</p>

<script type="math/tex; mode=display">{f^T_i = f(T,x,v,z_i)}_{i=1}^n</script>

<p>Step 2: for any given $z$, one can approximate $f(T, x,v,z)$ by</p>

<script type="math/tex; mode=display">\begin{equation}
a_i = \langle f_0(x,v,z), f_i\rangle,  \hat{f}(x,v, z) = \sum_{i = 1}^na_if^T_i.
\end{equation}</script>

<p><img src="https://cmc.deusto.eus/wp-content/uploads/2017/12/eq1_cts.jpg" alt="figure1" class="size-full wp-image-01" /><i align="aligncenter">Figure 1: Continuous initial data</i></p>

<p><img src="https://cmc.deusto.eus/wp-content/uploads/2017/12/eq1_discts.jpg" alt="figure2" class="size-full wp-image-02" /><i align="aligncenter">Figure 2: Discontinuous initial data</i></p>

<h3>1.2 Linear parametric VFP with deterministic initial data</h3>
<p>In the second experiment, we consider the case where the parameter $z\in[1,5]$ only involved in the PDE,</p>

<script type="math/tex; mode=display">\begin{equation}
 f_0(x,v,z) = \frac{1}{\sqrt{2\pi}} ( 2+\sin(x) ) \text{exp} ( -\frac{|v+\cos(x)|^2}{2} )
\end{equation}</script>

<p>Figure 3:</p>

<script type="math/tex; mode=display">\begin{equation}\sigma_1 = 1+\frac{1.5}{z}, \sigma_2 = \sigma_3 = 1+5e^{\frac{1}{z}}, \delta_x\phi = \cos(x)+\frac{z}{10};\end{equation}</script>

<p>Figure 4:</p>

<script type="math/tex; mode=display">% <![CDATA[
\begin{equation}\sigma_1 = 1+\frac{1.5}{z}, \sigma_2 = \sigma_3 = 1+5e^{\frac{1}{z}}, \delta_x\phi =\left\{
\begin{array}{rl}
& \cos(x)+\frac{z}{10}, z<3\\
&\cos(x)+\frac{z+1}{10}, z\geq3
\end{array}
\right.
\end{equation} %]]></script>

<p><strong>Algorithm 1.3. The algorithm for PDE with only parameters in PDE:</strong>
<strong>Offline:</strong> Set $N = {z_i: z_i = i\delta_z, \delta_z = \frac{b-a}{N_z}, i = 0,1, \dots, N_z}$, we set $N_z = 100$ in this case.</p>

<p>Step 1: choose</p>

<script type="math/tex; mode=display">z_1^\ast = argmax_{z \in N} || ( \sigma_1,\sigma_2,\sigma_3 )||^2</script>

<p>Step 2: After obtaining $z_i^\ast, f_i = f(T,x,v,z_i^\ast)$, $i =1, \dots, n-1$,</p>

<script type="math/tex; mode=display">\begin{equation}
z_n^\ast = argmax_{z\in N\backslash\{z_i^\ast\}_{i=1}^{n-1}} [ \min_{\hat{f} = \sum a_if_i,  \sum a_i = 1}
|| \delta_t\hat{f} + \underbrace{ \sigma_1(z)v\delta_x \hat{f} - \frac{\sigma_2(z)}{\epsilon} \delta_x\phi\delta_v \hat{f} - \frac{\sigma_3(z)}{\epsilon}\delta_v ( v \hat{f} + \delta_v\hat{f} ) }_{A(z)\hat{f} } ||^2 ],
\label{linear z_star}
\end{equation}</script>

<p>Step 3: Stops when the above maximum residual smaller than $\epsilon$.</p>

<p><strong>Online:</strong> After we obtained the snap shots ${z_i}_{i=1}^n$,
and the corresponding $f_i = f(T, x,v,z_i)$,</p>

<script type="math/tex; mode=display">\begin{equation}
\hat{f} = argmin_{\hat{f} = \sum a_if_i,  \sum a_i = 1} || \delta_t\hat{f} + \underbrace{\sigma_1(z)v\delta_x \hat{f} - \frac{\sigma_2(z)}{\epsilon} \delta_x\phi\delta_v \hat{f} - \frac{\sigma_3(z)}{\epsilon}\delta_v (v \hat{f} +\delta_v\hat{f} ) }_{A(z)\hat{f} } ||^2
\end{equation}</script>

<p><img src="https://cmc.deusto.eus/wp-content/uploads/2017/12/eq2_cts.jpg" alt="figure3" class="size-full wp-image-03" /><i align="aligncenter">Figure 3: Continuous parameter in PDE</i></p>

<p><img src="https://cmc.deusto.eus/wp-content/uploads/2017/12/eq2_discts.jpg" alt="figure4" class="size-full wp-image-04" /><i align="aligncenter">Figure 4: Discontinuous parameter in PDE</i></p>

<h3>1.3 Linear parametric VFP with parametric initial data</h3>
<p>In the third experiment, we consider the case where the parameter $z\in[1,5]$ involved in both the initial data and the PDE</p>

<script type="math/tex; mode=display">\begin{equation}\sigma_1 = 1+\frac{1.5}{z}, \sigma_2 = \sigma_3 = 1+5e^{\frac{1}{z}}, f_0(x,v,z) = \frac{1}{\sqrt{2\pi}}(2+\frac{\sin(x)}{z}) \text{exp}(-\frac{|v+\delta_x\phi|^2}{2})
\end{equation}</script>

<p>Figure 5:</p>

<script type="math/tex; mode=display">\begin{equation}\delta_x\phi = \cos(x) + \frac{z}{10}, \text{for }t\geq 0,\end{equation}</script>

<p>Figure 6:</p>

<script type="math/tex; mode=display">% <![CDATA[
\begin{equation}\delta_x\phi =\left\{\begin{array}{rl}& \cos(x)+\frac{z}{10}, z<3\\&\cos(x)+\frac{z+1}{10}, z\geq3\end{array}\right. \text{for }t\geq 0.\end{equation} %]]></script>

<p><strong>Algorithm 1.4. The algorithm for PDE with parameters in PDE and initial data:</strong></p>

<p><strong>Offline:</strong> Set $N = {z_i: z_i = i\delta_z, \delta_z = \frac{b-a}{N_z}, i = 0,1, \dots, N_z}$, we set $N_z = 10000$ in this case.</p>

<p>Step 1: Using Algorithm 1.4 to obtain 50 snap shots out of $N$
        to form a new set $N^\ast$.
Step 2: Using Algorithm 1.3 to get snap shot ${ z_i^\ast }_{i=1}^n$</p>

<p><strong>Online:</strong> Same as Algorithm 1.3.</p>

<p><strong>Remark 1.5.</strong> In the experiments, the exact solution $f(T,x,v,z)$
refers to the numerical solution to VFP, that is, $f(T,x,v,z)$ is a
$N_x\times N_v$ dimensional vector obtained by the following scheme</p>

<script type="math/tex; mode=display">\begin{equation}
\frac{f^{n+1}_{i,j} - f^n_{i,j}}{\delta_t} +\sigma_1 (v\delta_xf)^n_{i,j} = \frac{\sigma_3}{\epsilon}P(f^{n+1}_{i,j})
\end{equation}</script>

<p>where $P(f)$ is the discretization of
$\delta_v (M\delta_v (\frac{f}{M}))$,</p>

<script type="math/tex; mode=display">M = \frac{1}{\sqrt{2\pi}}e^{-\frac{|v+\frac{\sigma_2}{\sigma_3}\delta_x\phi|^2}{2}}</script>

<p><strong>Remark 1.6.</strong> For the matlab coding, the algorithm for the examples is in the ‚Äúgraph.m‚Äù file of the folder ‚Äúeq1‚Äù, ‚Äúeq2‚Äù, ‚Äúeq3‚Äù respectively.  You can change the coefficients in ‚Äúsig_1‚Äù, ‚Äúsig_2‚Äù, ‚Äúsig_3‚Äù, and the electric field in ‚Äúfcn_phi_x‚Äù, and initial data in ‚Äúfcn_phi_x_0‚Äù, ‚Äúfcn_rho_0‚Äù.</p>

<p>P.S. Remember to change the path of other functions at the beginning of ‚Äúgraph.m‚Äù.</p>

<p><img src="https://cmc.deusto.eus/wp-content/uploads/2017/12/eq3_cts.jpg" alt="figure5" class="size-full wp-image-05" /><i align="aligncenter">Figure 5: Continuous parameter in PDE and initial data</i></p>

<p><img src="https://cmc.deusto.eus/wp-content/uploads/2017/12/eq3_discts.jpg" alt="figure6" class="size-full wp-image-06" /><i align="aligncenter">Figure 6: Discontinuous parameter in PDE and initial data</i></p>
:ET