I"Üè<p>This tutorial aims to show how to build equations of motion, control system model and optimally stabilizing controllers for the inverted pendulum. This tutorial is a standard material in control engineering education. We first derive the equations of motion via Lagrange‚Äôs method using Symbolic Math Toolbox. Then, a linear control model is derived. The optimal controller is designed using linear quadratic regulator theory. Simulations are carried out for the inverted pendulum nonlinear model. In Appendix, finite horizon linear optimal control is shown by solving a differential Riccati equation.</p>

<p>A schematic of an inverted pendulum is shown below.</p>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0015-Pendulum/Pendulum_pic.png" alt="" /></p>

<p>A pendulum is attached with a cart that moves horizontally due to the force $u$ without friction. The pendulum freely rotates around the pivot on the cart. It is assumed that the cart and pendulum move in the vertical plane. The masses of the pendulum and cart are $m$ and $M$, respectively, and the length of the pendulum is $2l$. The position of the cart is denoted by $x$ and the angle of the pendulum from the vertical axis is $\theta$.</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">syms</span> <span class="n">t</span><span class="p">;</span>
<span class="n">syms</span> <span class="n">x</span> <span class="n">dx</span> <span class="n">theta</span> <span class="n">dtheta</span><span class="p">;</span>
<span class="n">syms</span> <span class="n">M</span> <span class="n">m</span> <span class="n">l</span> <span class="n">g</span><span class="p">;</span>
<span class="n">syms</span> <span class="n">Lgr</span> <span class="n">Lgr_x</span> <span class="n">Lgr_dx</span> <span class="n">Lgr_theta</span> <span class="n">Lgr_dtheta</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="derivation-of-equations-of-motion">Derivation of equations of motion</h2>

<p>The Lagrangian $L$ consists of the kinetic energy and potential energy, which is given by</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Lgr</span> <span class="o">=</span> <span class="mi">1</span><span class="p">/</span><span class="mi">2</span> <span class="o">*</span> <span class="n">M</span><span class="o">*</span><span class="n">dx</span><span class="o">^</span><span class="mi">2</span> <span class="o">+</span> <span class="mi">2</span><span class="p">/</span><span class="mi">3</span> <span class="o">*</span> <span class="n">m</span><span class="o">*</span><span class="n">l</span><span class="o">^</span><span class="mi">2</span><span class="o">*</span><span class="n">dtheta</span><span class="o">^</span><span class="mi">2</span> <span class="o">+</span> <span class="n">m</span><span class="o">*</span><span class="n">l</span><span class="o">*</span><span class="n">dx</span><span class="o">*</span><span class="n">dtheta</span><span class="o">*</span><span class="nb">cos</span><span class="p">(</span><span class="n">theta</span><span class="p">)</span><span class="k">...</span>
        <span class="o">+</span> <span class="mi">1</span><span class="p">/</span><span class="mi">2</span> <span class="o">*</span><span class="n">m</span><span class="o">*</span><span class="n">dx</span><span class="o">^</span><span class="mi">2</span> <span class="o">-</span> <span class="n">m</span><span class="o">*</span><span class="n">g</span><span class="o">*</span><span class="n">l</span><span class="o">*</span><span class="nb">cos</span><span class="p">(</span><span class="n">theta</span><span class="p">);</span>
</code></pre></div></div>

<p>Compute derivatives of Lagrangian</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Lgr_x</span> <span class="o">=</span> <span class="nb">diff</span><span class="p">(</span><span class="n">Lgr</span><span class="p">,</span><span class="n">x</span><span class="p">);</span>
<span class="n">Lgr_dx</span> <span class="o">=</span> <span class="nb">diff</span><span class="p">(</span><span class="n">Lgr</span><span class="p">,</span><span class="n">dx</span><span class="p">);</span>
<span class="n">Lgr_theta</span> <span class="o">=</span> <span class="nb">diff</span><span class="p">(</span><span class="n">Lgr</span><span class="p">,</span><span class="n">theta</span><span class="p">);</span>
<span class="n">Lgr_dtheta</span> <span class="o">=</span> <span class="nb">diff</span><span class="p">(</span><span class="n">Lgr</span><span class="p">,</span><span class="n">dtheta</span><span class="p">);</span>

<span class="n">syms</span> <span class="n">x_f</span><span class="p">(</span><span class="n">t</span><span class="p">)</span> <span class="n">dx_f</span><span class="p">(</span><span class="n">t</span><span class="p">)</span> <span class="n">theta_f</span><span class="p">(</span><span class="n">t</span><span class="p">)</span> <span class="n">dtheta_f</span><span class="p">(</span><span class="n">t</span><span class="p">)</span> <span class="n">Lgr_x_f</span> <span class="n">Lgr_dx_f</span> <span class="n">Lgr_theta_f</span> <span class="n">Lgr_dtheta_f</span><span class="p">;</span> <span class="c1">%% _f means functionalized</span>
<span class="n">dx_f</span><span class="p">(</span><span class="n">t</span><span class="p">)</span><span class="o">=</span><span class="nb">diff</span><span class="p">(</span><span class="n">x_f</span><span class="p">,</span><span class="n">t</span><span class="p">);</span>
<span class="n">dtheta_f</span><span class="o">=</span><span class="nb">diff</span><span class="p">(</span><span class="n">theta_f</span><span class="p">,</span><span class="n">t</span><span class="p">);</span>

<span class="n">Lgr_dx_f</span> <span class="o">=</span> <span class="n">subs</span><span class="p">(</span><span class="n">Lgr_dx</span><span class="p">,[</span><span class="n">x</span> <span class="n">dx</span> <span class="n">theta</span> <span class="n">dtheta</span><span class="p">],[</span><span class="n">x_f</span> <span class="n">dx_f</span> <span class="n">theta_f</span> <span class="n">dtheta_f</span><span class="p">])</span>
<span class="n">Lgr_theta_f</span> <span class="o">=</span> <span class="n">subs</span><span class="p">(</span><span class="n">Lgr_theta</span><span class="p">,[</span><span class="n">x</span> <span class="n">dx</span> <span class="n">theta</span> <span class="n">dtheta</span><span class="p">],[</span><span class="n">x_f</span> <span class="n">dx_f</span> <span class="n">theta_f</span> <span class="n">dtheta_f</span><span class="p">])</span>
<span class="n">Lgr_dtheta_f</span> <span class="o">=</span> <span class="n">subs</span><span class="p">(</span><span class="n">Lgr_dtheta</span><span class="p">,[</span><span class="n">x</span> <span class="n">dx</span> <span class="n">theta</span> <span class="n">dtheta</span><span class="p">],[</span><span class="n">x_f</span> <span class="n">dx_f</span> <span class="n">theta_f</span> <span class="n">dtheta_f</span><span class="p">])</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
Lgr_dx_f =

M*diff(x_f(t), t) + m*diff(x_f(t), t) + l*m*cos(theta_f(t))*diff(theta_f(t), t)


Lgr_theta_f =

g*l*m*sin(theta_f(t)) - l*m*sin(theta_f(t))*diff(theta_f(t), t)*diff(x_f(t), t)


Lgr_dtheta_f =

(4*m*diff(theta_f(t), t)*l^2)/3 + m*cos(theta_f(t))*diff(x_f(t), t)*l


</code></pre></div></div>

<p>Coumpute Lagrange‚Äôs equations of motion with external force $u$</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">syms</span> <span class="n">Leq</span> <span class="n">Eqn</span><span class="p">;</span>
<span class="n">Leq</span> <span class="o">=</span> <span class="nb">diff</span><span class="p">([</span><span class="n">Lgr_dx_f</span><span class="p">;</span> <span class="n">Lgr_dtheta_f</span><span class="p">],</span><span class="n">t</span><span class="p">)</span> <span class="o">-</span> <span class="p">[</span><span class="n">Lgr_x</span><span class="p">;</span> <span class="n">Lgr_theta_f</span><span class="p">];</span>
<span class="n">syms</span> <span class="n">Ddx</span> <span class="n">Ddtheta</span> <span class="n">u</span><span class="p">;</span>
<span class="n">Leq</span> <span class="o">=</span> <span class="n">subs</span><span class="p">(</span><span class="n">Leq</span><span class="p">,[</span><span class="nb">diff</span><span class="p">(</span><span class="n">x_f</span><span class="p">(</span><span class="n">t</span><span class="p">),</span> <span class="n">t</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span> <span class="p">,</span> <span class="nb">diff</span><span class="p">(</span><span class="n">theta_f</span><span class="p">(</span><span class="n">t</span><span class="p">),</span> <span class="n">t</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span> <span class="p">],[</span><span class="n">Ddx</span><span class="p">,</span> <span class="n">Ddtheta</span><span class="p">])</span><span class="o">-</span><span class="p">[</span><span class="n">u</span><span class="p">;</span> <span class="mi">0</span><span class="p">];</span>
<span class="n">Eqn</span> <span class="o">=</span> <span class="n">solve</span><span class="p">(</span><span class="n">Leq</span><span class="o">==</span><span class="mi">0</span><span class="p">,[</span><span class="n">Ddx</span><span class="p">,</span><span class="n">Ddtheta</span><span class="p">]);</span>
</code></pre></div></div>

<p>Construct state space equations of the first order equation</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">syms</span> <span class="n">x1</span> <span class="n">x2</span> <span class="n">x3</span> <span class="n">x4</span> <span class="n">X</span><span class="p">;</span>
<span class="n">X</span> <span class="o">=</span> <span class="p">[</span><span class="n">x1</span><span class="p">;</span><span class="n">x2</span><span class="p">;</span><span class="n">x3</span><span class="p">;</span><span class="n">x4</span><span class="p">];</span>
<span class="n">subs</span><span class="p">(</span><span class="n">Eqn</span><span class="o">.</span><span class="n">Ddx</span><span class="p">,</span> <span class="p">[</span><span class="n">x_f</span><span class="p">,</span> <span class="nb">diff</span><span class="p">(</span><span class="n">x_f</span><span class="p">(</span><span class="n">t</span><span class="p">),</span><span class="n">t</span><span class="p">),</span> <span class="n">theta_f</span><span class="p">,</span> <span class="nb">diff</span><span class="p">(</span><span class="n">theta_f</span><span class="p">(</span><span class="n">t</span><span class="p">),</span><span class="n">t</span><span class="p">)],</span> <span class="p">[</span><span class="n">x1</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="n">x3</span><span class="p">,</span> <span class="n">x4</span><span class="p">]);</span>
<span class="n">subs</span><span class="p">(</span><span class="n">Eqn</span><span class="o">.</span><span class="n">Ddtheta</span><span class="p">,</span> <span class="p">[</span><span class="n">x_f</span><span class="p">,</span> <span class="nb">diff</span><span class="p">(</span><span class="n">x_f</span><span class="p">(</span><span class="n">t</span><span class="p">),</span><span class="n">t</span><span class="p">),</span> <span class="n">theta_f</span><span class="p">,</span> <span class="nb">diff</span><span class="p">(</span><span class="n">theta_f</span><span class="p">(</span><span class="n">t</span><span class="p">),</span><span class="n">t</span><span class="p">)],</span> <span class="p">[</span><span class="n">x1</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="n">x3</span><span class="p">,</span> <span class="n">x4</span><span class="p">]);</span>

<span class="n">syms</span> <span class="n">Nsys</span>
<span class="n">Nsys</span> <span class="o">=</span> <span class="p">[</span><span class="n">x2</span><span class="p">;</span><span class="k">...</span>
        <span class="n">subs</span><span class="p">(</span><span class="n">Eqn</span><span class="o">.</span><span class="n">Ddx</span><span class="p">,</span> <span class="p">[</span><span class="n">x_f</span><span class="p">,</span> <span class="nb">diff</span><span class="p">(</span><span class="n">x_f</span><span class="p">(</span><span class="n">t</span><span class="p">),</span><span class="n">t</span><span class="p">),</span> <span class="n">theta_f</span><span class="p">,</span> <span class="nb">diff</span><span class="p">(</span><span class="n">theta_f</span><span class="p">(</span><span class="n">t</span><span class="p">),</span><span class="n">t</span><span class="p">)],</span> <span class="p">[</span><span class="n">x1</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="n">x3</span><span class="p">,</span> <span class="n">x4</span><span class="p">]);</span><span class="k">...</span>
        <span class="n">x4</span><span class="p">;</span><span class="k">...</span>
        <span class="n">subs</span><span class="p">(</span><span class="n">Eqn</span><span class="o">.</span><span class="n">Ddtheta</span><span class="p">,</span> <span class="p">[</span><span class="n">x_f</span><span class="p">,</span> <span class="nb">diff</span><span class="p">(</span><span class="n">x_f</span><span class="p">(</span><span class="n">t</span><span class="p">),</span><span class="n">t</span><span class="p">),</span> <span class="n">theta_f</span><span class="p">,</span> <span class="nb">diff</span><span class="p">(</span><span class="n">theta_f</span><span class="p">(</span><span class="n">t</span><span class="p">),</span><span class="n">t</span><span class="p">)],</span> <span class="p">[</span><span class="n">x1</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="n">x3</span><span class="p">,</span> <span class="n">x4</span><span class="p">])];</span>

<span class="n">syms</span> <span class="n">F</span><span class="p">;</span>
<span class="n">F</span> <span class="o">=</span> <span class="n">subs</span><span class="p">(</span><span class="n">Nsys</span><span class="p">,</span><span class="n">u</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
</code></pre></div></div>

<p>Construct linear model $\dot{x} = Ax+Bu$</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">syms</span> <span class="n">Amat</span> <span class="n">Bmat</span>
<span class="n">Amat</span> <span class="o">=</span> <span class="n">subs</span><span class="p">(</span><span class="n">jacobian</span><span class="p">(</span><span class="n">F</span><span class="p">,</span><span class="n">X</span><span class="p">),[</span><span class="n">x1</span><span class="p">,</span><span class="n">x2</span><span class="p">,</span><span class="n">x3</span><span class="p">,</span><span class="n">x4</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">])</span>
<span class="n">Bmat</span> <span class="o">=</span> <span class="nb">diff</span><span class="p">(</span><span class="n">subs</span><span class="p">(</span><span class="n">Nsys</span><span class="p">,[</span><span class="n">x1</span><span class="p">,</span><span class="n">x2</span><span class="p">,</span><span class="n">x3</span><span class="p">,</span><span class="n">x4</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]),</span><span class="n">u</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
Amat =

[ 0, 1,                             0, 0]
[ 0, 0,            -(3*g*m)/(4*M + m), 0]
[ 0, 0,                             0, 1]
[ 0, 0, (3*(M*g + g*m))/(l*(4*M + m)), 0]


Bmat =

                0
      4/(4*M + m)
                0
 -3/(l*(4*M + m))


</code></pre></div></div>

<p>We will use the following physical parameters m = 0.3 [kg]; M = 0.8 [kg]; l = 0.25 [m]; g = 9.8 [m/s^2];</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">A</span> <span class="o">=</span> <span class="nb">double</span><span class="p">(</span><span class="n">subs</span><span class="p">(</span><span class="n">Amat</span><span class="p">,[</span><span class="n">m</span> <span class="n">M</span> <span class="n">l</span> <span class="n">g</span><span class="p">],[</span><span class="mf">0.3</span> <span class="mf">0.8</span> <span class="mf">0.25</span> <span class="mf">9.8</span><span class="p">]));</span>
<span class="n">B</span> <span class="o">=</span> <span class="nb">double</span><span class="p">(</span><span class="n">subs</span><span class="p">(</span><span class="n">Bmat</span><span class="p">,[</span><span class="n">m</span> <span class="n">M</span> <span class="n">l</span> <span class="n">g</span><span class="p">],[</span><span class="mf">0.3</span> <span class="mf">0.8</span> <span class="mf">0.25</span> <span class="mf">9.8</span><span class="p">]));</span>
</code></pre></div></div>

<h2 id="lqr-controller-design">LQR controller design</h2>

<p>We design a linear feedback controller that minimizes the cost function</p>

<script type="math/tex; mode=display">J =\int_0^{\infty} x^TQx + u^2\,dt</script>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">R</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">Q</span> <span class="o">=</span> <span class="nb">diag</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">]);</span>
<span class="p">[</span><span class="n">ricsol</span><span class="p">,</span><span class="n">cleig</span><span class="p">,</span><span class="n">K</span><span class="p">,</span><span class="n">report</span><span class="p">]</span> <span class="o">=</span> <span class="n">care</span><span class="p">(</span><span class="n">A</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">Q</span><span class="p">);</span>

<span class="n">f_ctr</span> <span class="o">=</span> <span class="o">@</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">-</span><span class="n">K</span><span class="o">*</span><span class="n">x</span><span class="p">;</span>
<span class="n">i_linear</span> <span class="o">=</span> <span class="o">@</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="n">x</span><span class="p">)</span> <span class="n">A</span><span class="o">*</span><span class="n">x</span> <span class="o">+</span> <span class="n">B</span><span class="o">*</span><span class="n">f_ctr</span><span class="p">(</span><span class="n">x</span><span class="p">);</span> <span class="c1">%% closed loop systems</span>

<span class="n">tspan</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">];</span>
<span class="n">ini</span> <span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mf">0.91</span><span class="p">,</span><span class="mi">0</span><span class="p">];</span> <span class="c1">%%1.1894299</span>
<span class="p">[</span><span class="nb">time</span><span class="p">,</span> <span class="n">state</span><span class="p">]</span> <span class="o">=</span> <span class="nb">ode45</span><span class="p">(</span><span class="n">i_linear</span><span class="p">,</span><span class="n">tspan</span><span class="p">,</span> <span class="n">ini</span><span class="p">);</span>
<span class="n">input_linear</span> <span class="o">=</span> <span class="n">f_ctr</span><span class="p">(</span><span class="n">state</span><span class="o">'</span><span class="p">);</span>
</code></pre></div></div>

<p>Simulations with linear and nonlinear models</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Nsys_f</span> <span class="o">=</span> <span class="n">matlabFunction</span><span class="p">(</span><span class="n">Nsys</span><span class="p">);</span> <span class="c1">%% function of M,g,l,m,u,x2,x3,x4</span>
<span class="n">i_nonlinear</span> <span class="o">=</span> <span class="o">@</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="n">x</span><span class="p">)</span> <span class="n">Nsys_f</span><span class="p">(</span><span class="mf">0.8</span><span class="p">,</span><span class="mf">9.8</span><span class="p">,</span><span class="mf">0.25</span><span class="p">,</span><span class="mf">0.3</span><span class="p">,</span><span class="n">f_ctr</span><span class="p">(</span><span class="n">x</span><span class="p">),</span><span class="n">x</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="n">x</span><span class="p">(</span><span class="mi">3</span><span class="p">),</span><span class="n">x</span><span class="p">(</span><span class="mi">4</span><span class="p">));</span>

<span class="p">[</span><span class="n">timen</span><span class="p">,</span> <span class="n">staten</span><span class="p">]</span> <span class="o">=</span> <span class="nb">ode45</span><span class="p">(</span><span class="n">i_nonlinear</span><span class="p">,</span><span class="n">tspan</span><span class="p">,</span> <span class="n">ini</span><span class="p">);</span>
<span class="n">input_nonlinear</span> <span class="o">=</span> <span class="n">f_ctr</span><span class="p">(</span><span class="n">staten</span><span class="o">'</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">clf</span>
<span class="nb">plot</span><span class="p">(</span><span class="nb">time</span><span class="p">,</span> <span class="n">state</span><span class="p">(:,</span><span class="mi">1</span><span class="p">),</span><span class="s1">'LineWidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">hold</span> <span class="n">on</span>
<span class="nb">plot</span><span class="p">(</span><span class="n">timen</span><span class="p">,</span> <span class="n">staten</span><span class="p">(:,</span><span class="mi">1</span><span class="p">),</span><span class="s1">'LineWidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">grid</span> <span class="n">on</span>
<span class="nb">legend</span><span class="p">(</span><span class="s1">'Linear model'</span><span class="p">,</span> <span class="s1">'Nonlinear model'</span><span class="p">)</span>
<span class="nb">title</span><span class="p">(</span><span class="s1">'Cart position [m]'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0015-Pendulum/copiaRM_01.png" alt="" /></p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">clf</span>
<span class="nb">plot</span><span class="p">(</span><span class="nb">time</span><span class="p">,</span> <span class="n">state</span><span class="p">(:,</span><span class="mi">3</span><span class="p">),</span><span class="s1">'LineWidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">hold</span> <span class="n">on</span>
<span class="nb">plot</span><span class="p">(</span><span class="n">timen</span><span class="p">,</span> <span class="n">staten</span><span class="p">(:,</span><span class="mi">3</span><span class="p">),</span><span class="s1">'LineWidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">grid</span> <span class="n">on</span>
<span class="nb">legend</span><span class="p">(</span><span class="s1">'Linear model'</span><span class="p">,</span> <span class="s1">'Nonlinear model'</span><span class="p">)</span>
<span class="nb">title</span><span class="p">(</span><span class="s1">'Pendulum angle [rad]'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0015-Pendulum/copiaRM_02.png" alt="" /></p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">clf</span>
<span class="nb">plot</span><span class="p">(</span><span class="nb">time</span><span class="p">,</span> <span class="n">input_linear</span><span class="p">,</span><span class="s1">'LineWidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">hold</span> <span class="n">on</span><span class="p">;</span><span class="nb">grid</span> <span class="n">on</span>
<span class="nb">plot</span><span class="p">(</span><span class="n">timen</span><span class="p">,</span> <span class="n">input_nonlinear</span><span class="p">,</span><span class="s1">'LineWidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">legend</span><span class="p">(</span><span class="s1">'Linear model'</span><span class="p">,</span><span class="s1">'Nonlinear model'</span><span class="p">)</span>
<span class="nb">title</span><span class="p">(</span><span class="s1">'Input response'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0015-Pendulum/copiaRM_03.png" alt="" /></p>

<h2 id="appendix-finite-interval-optimal-control-with-dre-">Appendix (finite interval optimal control with DRE )</h2>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rho</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="n">S</span> <span class="o">=</span> <span class="n">rho</span> <span class="o">*</span> <span class="nb">eye</span><span class="p">(</span><span class="nb">size</span><span class="p">(</span><span class="n">A</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span>
</code></pre></div></div>

<h2 id="solve--dxdt--xa--ax---xbr-1bx-q-xt--s-dre">Solve -dX/dt = XA + A‚ÄôX - X<em>B</em>R^{-1}<em>B‚Äô</em>X +Q, X(T) = S (DRE)</h2>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tspan_ric</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span><span class="mi">0</span><span class="p">];</span> <span class="c1">%% change horizon!</span>
<span class="n">iniric</span> <span class="o">=</span> <span class="n">S</span><span class="p">(:);</span>
<span class="n">i_ric</span> <span class="o">=</span> <span class="o">@</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="n">x</span><span class="p">)</span> <span class="o">-</span><span class="n">f_dric</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">A</span><span class="p">,</span> <span class="n">B</span> <span class="o">*</span> <span class="n">B</span><span class="o">.'</span><span class="p">,</span> <span class="n">Q</span><span class="p">);</span>
<span class="n">opts</span> <span class="o">=</span> <span class="nb">odeset</span><span class="p">(</span><span class="s1">'RelTol'</span><span class="p">,</span><span class="mf">1e-10</span><span class="p">,</span><span class="s1">'AbsTol'</span><span class="p">,</span><span class="mf">1e-10</span><span class="p">);</span>
<span class="p">[</span><span class="n">time_ric</span><span class="p">,</span> <span class="n">X</span><span class="p">]</span> <span class="o">=</span> <span class="nb">ode45</span><span class="p">(</span><span class="n">i_ric</span><span class="p">,</span> <span class="n">tspan_ric</span><span class="p">,</span> <span class="n">iniric</span><span class="p">,</span> <span class="n">opts</span><span class="p">);</span>
<span class="nb">reshape</span><span class="p">(</span><span class="n">X</span><span class="p">(</span><span class="k">end</span><span class="p">,:),</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">-</span><span class="n">ricsol</span> <span class="c1">%% Convergence check with sol of ARE</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
ans =

   1.0e-04 *

   -0.0103   -0.0124   -0.0358   -0.0065
   -0.0124   -0.0185   -0.0549   -0.0099
   -0.0358   -0.0549   -0.1639   -0.0295
   -0.0065   -0.0099   -0.0295   -0.0053


</code></pre></div></div>

<p>Construct feedback controller using interpolation of DRE sol</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gain</span> <span class="o">=</span> <span class="nb">zeros</span><span class="p">(</span><span class="nb">length</span><span class="p">(</span><span class="n">X</span><span class="p">),</span><span class="nb">size</span><span class="p">(</span><span class="n">A</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span>
<span class="k">for</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">:</span><span class="nb">length</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
    <span class="n">gain</span><span class="p">(</span><span class="n">i</span><span class="p">,:)</span> <span class="o">=</span> <span class="n">B</span><span class="o">'</span> <span class="o">*</span> <span class="nb">reshape</span><span class="p">(</span><span class="n">X</span><span class="p">(</span><span class="n">i</span><span class="p">,:),</span><span class="nb">size</span><span class="p">(</span><span class="n">A</span><span class="p">));</span>
<span class="k">end</span>
<span class="n">gain_t</span> <span class="o">=</span> <span class="o">@</span><span class="p">(</span><span class="n">t</span><span class="p">)</span> <span class="nb">interp1</span><span class="p">(</span><span class="n">time_ric</span><span class="p">,</span><span class="n">gain</span><span class="p">,</span><span class="n">t</span><span class="p">);</span>
<span class="n">u_dr</span> <span class="o">=</span> <span class="o">@</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="n">x</span><span class="p">)</span> <span class="o">-</span><span class="n">gain_t</span><span class="p">(</span><span class="n">t</span><span class="p">)</span><span class="o">*</span><span class="n">x</span><span class="p">;</span>

<span class="n">tspan</span> <span class="o">=</span> <span class="nb">sort</span><span class="p">(</span><span class="n">tspan_ric</span><span class="p">,</span> <span class="s1">'ascend'</span><span class="p">);</span>
<span class="n">i_nonlinear_dre</span> <span class="o">=</span> <span class="o">@</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="n">x</span><span class="p">)</span> <span class="n">Nsys_f</span><span class="p">(</span><span class="mf">0.8</span><span class="p">,</span><span class="mf">9.8</span><span class="p">,</span><span class="mf">0.25</span><span class="p">,</span><span class="mf">0.3</span><span class="p">,</span><span class="n">u_dr</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="n">x</span><span class="p">),</span><span class="n">x</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="n">x</span><span class="p">(</span><span class="mi">3</span><span class="p">),</span><span class="n">x</span><span class="p">(</span><span class="mi">4</span><span class="p">));</span>
<span class="p">[</span><span class="n">timedn</span><span class="p">,</span> <span class="n">statedn</span><span class="p">]</span> <span class="o">=</span> <span class="nb">ode45</span><span class="p">(</span><span class="n">i_nonlinear_dre</span><span class="p">,</span><span class="n">tspan</span><span class="p">,</span> <span class="n">ini</span><span class="p">);</span><span class="c1">%%</span>
<span class="n">input_dric</span><span class="o">=</span><span class="p">[];</span>
<span class="k">for</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">:</span><span class="nb">length</span><span class="p">(</span><span class="n">timedn</span><span class="p">)</span>
    <span class="n">input_dric</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">=</span> <span class="n">u_dr</span><span class="p">(</span><span class="n">timedn</span><span class="p">(</span><span class="n">i</span><span class="p">),</span><span class="n">statedn</span><span class="p">(</span><span class="n">i</span><span class="p">,:)</span><span class="o">'</span><span class="p">);</span>
<span class="k">end</span>
</code></pre></div></div>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">clf</span>
<span class="nb">plot</span><span class="p">(</span><span class="n">timedn</span><span class="p">,</span> <span class="n">statedn</span><span class="p">(:,</span><span class="mi">3</span><span class="p">),</span><span class="s1">'LineWidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">grid</span> <span class="n">on</span>
<span class="nb">hold</span> <span class="n">on</span>
<span class="nb">plot</span><span class="p">(</span><span class="n">timen</span><span class="p">,</span> <span class="n">staten</span><span class="p">(:,</span><span class="mi">3</span><span class="p">),</span><span class="s1">'ro'</span><span class="p">)</span>
<span class="nb">legend</span><span class="p">(</span><span class="s1">'control with DRE [10,0]'</span><span class="p">,</span> <span class="s1">'control with ARE'</span><span class="p">)</span>
<span class="nb">title</span><span class="p">(</span><span class="s1">'Pendulum responses with nonlinear model'</span><span class="p">)</span>
<span class="nb">hold</span> <span class="n">off</span>
</code></pre></div></div>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0015-Pendulum/copiaRM_04.png" alt="" /></p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">plot</span><span class="p">(</span><span class="n">timedn</span><span class="p">,</span><span class="n">input_dric</span><span class="p">,</span><span class="s1">'LineWidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">hold</span> <span class="n">on</span>
<span class="nb">plot</span><span class="p">(</span><span class="n">timen</span><span class="p">,</span><span class="n">input_nonlinear</span><span class="p">,</span><span class="s1">'ro'</span><span class="p">)</span>
<span class="nb">grid</span> <span class="n">on</span>
<span class="nb">legend</span><span class="p">(</span><span class="s1">'input with ARE'</span><span class="p">,</span><span class="s1">'input with DRE [10,0]'</span><span class="p">)</span>
<span class="nb">title</span><span class="p">(</span><span class="s1">'input responses with nonlinear model'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0015-Pendulum/copiaRM_05.png" alt="" /></p>
:ET