I"¹ò<h3 id="a-sample-result">A sample result</h3>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0026/ds.gif" alt="Figure1" /></p>

<p>This video describes an optimal control steering red dots(evaders) to the position $(4,4)$, which is calculated by IpOpt with AMPL. See <a href="https://deustotech.github.io/DyCon-Blog/tutorial/wp03/P0002">the post explaining IpOpt and AMPL</a> for detailed description.</p>

<h3 id="the-guidance-by-repulsion-model">The guidance-by-repulsion model</h3>

<p>Let $u_{ei}$ and $u_{dj}$ be the positions of the evaders $(i=1,\ldots,N)$ and drivers $(j=1,\ldots,M)$, respectively, in ${\mathbb R}^2$. We consider the following ODE system:</p>

<script type="math/tex; mode=display">\ddot{u}_{dj} = -f_d(|u_{dj} - u_{ec}|)(u_{dj} - u_{ec}) - \nu \dot{u}_{dj} + \kappa_j(t) (u_{dj} - u_{ec})^\perp,\quad u_{ec} := \frac{1}{N}\sum_{k=1}^N u_{ek},</script>

<script type="math/tex; mode=display">\ddot{u}_{ei} =  - \frac{1}{M} \sum_{j=1}^M f_e(|u_{dj} - u_{ei}|)(u_{dj} - u_{ei}) - \nu \dot{u}_{ei}, \\</script>

<script type="math/tex; mode=display">u_{dj}(0) = u_{dj}^0,~ u_{ei}(0) = u_{ei}^0,~ \dot{u}_{dj}(0) = v_{dj}^0, ~ \dot{u}_{ei}(0) = v_{ei}^0,</script>

<p>where $\kappa_j(t)$ is the control interface and the interaction functions are given by</p>

<script type="math/tex; mode=display">f_d(r) = \frac{2}{r^2}-\frac{3}{r^4}+2,\quad f_e(r) = \frac{1}{r^2} \quad\text{and}\quad \nu = 2.</script>

<p>In the dynamics, the evaders always get forced from all of the drivers, while the drivers wants to keep a stable distance ($f_d(1)-f_e(1)=0$). By choosing proper $\kappa_j(t)$, we wants to steer the evaders into a predetermined region.</p>

<p>The objective of the control is given by the cost function with the fixed final time $t_f&gt;0$,</p>

<script type="math/tex; mode=display">J(\kappa_1(\cdot),\ldots,\kappa_M(\cdot)) = \frac{1}{N} \sum_{i=1}^N |u_{ei}(t_f) - u_f|^2 + \frac{\delta_1}{M} \sum_{k=1}^M \int_0^{t_f} |\kappa_k(t)|^2 dt,</script>

<p>where $\delta_1$ is a regularization coefficient, $0.1$ in this post.</p>

<h3 id="ampl-code-for-solving-the-optimal-control-problem">AMPL code for solving the optimal control problem</h3>

<p>Let us explain an AMPL code step by step. First, we need to set relative parameters.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># GBR_fixedtime.mod
</span>
<span class="c1"># This file solves the Guidance-by-repulsion model with 2 drivers and 16 evaders to 
</span>
<span class="c1"># the target point [4;4] in a fixed final time T=10.
</span>
<span class="c1"># Define the parameters of the problem
</span>
<span class="n">param</span> <span class="n">pi</span>      <span class="o">=</span> <span class="mf">3.141592653589793238462643</span><span class="p">;</span> 

<span class="n">param</span> <span class="n">Nt</span>      <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>      <span class="c1"># number of discretized points in time
</span>
<span class="n">param</span> <span class="n">M_sqrt</span>  <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>        <span class="c1"># sqrt of Number of evaders
</span>
<span class="n">param</span> <span class="n">M_e</span>     <span class="o">=</span> <span class="n">M_sqrt</span><span class="o">^</span><span class="mi">2</span><span class="p">;</span> <span class="c1"># Number of evaders
</span>
<span class="n">param</span> <span class="n">M_d</span>     <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>        <span class="c1"># Number of drivers
</span>
<span class="n">param</span> <span class="n">T</span>       <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>

<span class="n">param</span> <span class="n">M_kappa</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>        <span class="c1"># Bound on the control
</span>
<span class="c1"># Target point
</span>
<span class="n">param</span> <span class="n">uf1</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
<span class="n">param</span> <span class="n">uf2</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</code></pre></div></div>

<p>For the initial condition, we use uniform distribution of evaders in a square $[-1,1]\times[-1,1]$, and the drivers are in a circle with radius $5$.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Initial values
</span>
<span class="n">param</span> <span class="n">ue_zero</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">};</span>
<span class="k">for</span> <span class="p">{</span><span class="n">k1</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_sqrt</span><span class="p">,</span> <span class="n">k2</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_sqrt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">{</span>
	<span class="n">let</span> <span class="n">ue_zero</span><span class="p">[</span><span class="n">M_sqrt</span><span class="o">*</span><span class="p">(</span><span class="n">k1</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="n">k2</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span> <span class="p">:</span><span class="o">=</span> <span class="p">((</span><span class="n">k1</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">M_sqrt</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
	<span class="n">let</span> <span class="n">ue_zero</span><span class="p">[</span><span class="n">M_sqrt</span><span class="o">*</span><span class="p">(</span><span class="n">k1</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="n">k2</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="p">:</span><span class="o">=</span> <span class="p">((</span><span class="n">k2</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">M_sqrt</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
<span class="n">param</span> <span class="n">ud_zero</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">};</span>
<span class="k">for</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">{</span>
	<span class="n">let</span> <span class="n">ud_zero</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span> <span class="p">:</span><span class="o">=</span> <span class="mi">5</span><span class="o">*</span><span class="n">cos</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">pi</span><span class="o">/</span><span class="n">M_d</span><span class="o">*</span><span class="p">(</span><span class="n">l</span><span class="o">-</span><span class="mi">1</span><span class="p">));</span>
	<span class="n">let</span> <span class="n">ud_zero</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="p">:</span><span class="o">=</span> <span class="mi">5</span><span class="o">*</span><span class="n">sin</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">pi</span><span class="o">/</span><span class="n">M_d</span><span class="o">*</span><span class="p">(</span><span class="n">l</span><span class="o">-</span><span class="mi">1</span><span class="p">));</span>
<span class="p">}</span>

<span class="c1"># State variables
</span>
<span class="n">var</span> <span class="n">ue</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">};</span>
<span class="n">var</span> <span class="n">ve</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">};</span>
<span class="n">var</span> <span class="n">ud</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">};</span>
<span class="n">var</span> <span class="n">vd</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">};</span>
<span class="n">var</span> <span class="n">uec</span> <span class="p">{</span><span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="o">=</span> <span class="mi">1</span><span class="o">/</span><span class="n">M_e</span><span class="o">*</span><span class="p">(</span><span class="nb">sum</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">}</span> <span class="p">(</span><span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">]));</span>

<span class="c1"># initialize
</span>
<span class="n">subject</span> <span class="n">to</span> <span class="n">ue_init</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">:</span> <span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">ue_zero</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">j</span><span class="p">];</span>
<span class="n">subject</span> <span class="n">to</span> <span class="n">ud_init</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">:</span> <span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">ud_zero</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">j</span><span class="p">];</span>
<span class="n">subject</span> <span class="n">to</span> <span class="n">vd_init</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">:</span> <span class="n">ve</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="n">subject</span> <span class="n">to</span> <span class="n">ve_init</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">:</span> <span class="n">vd</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>  
<span class="n">let</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">]</span> <span class="p">:</span><span class="o">=</span> <span class="n">ue_zero</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">j</span><span class="p">];</span>
<span class="n">let</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">]</span> <span class="p">:</span><span class="o">=</span> <span class="n">ud_zero</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">j</span><span class="p">];</span>
<span class="n">let</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="n">ve</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">]</span> <span class="p">:</span><span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="n">let</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="n">vd</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">]</span> <span class="p">:</span><span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   
</code></pre></div></div>
<p>For the initial guess, we also put the initial data for the whole timeline. If we donât specify this, then the default values are zero, which can make redundant errors or iterations.</p>

<p>Now, we define the controls and cost.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># The control function
</span>
<span class="n">var</span> <span class="n">kappa</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">},</span> <span class="n">default</span> <span class="mf">2.8</span><span class="p">;</span>  
<span class="n">subject</span> <span class="n">to</span> <span class="n">kappa_bounds</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">}</span> <span class="p">:</span> <span class="o">-</span><span class="n">M_kappa</span> <span class="o">&lt;=</span> <span class="n">kappa</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">M_kappa</span><span class="p">;</span>
<span class="c1"># initial guess on control
</span>
<span class="n">let</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">}</span> <span class="n">kappa</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">]</span> <span class="p">:</span><span class="o">=</span> <span class="mf">2.8</span><span class="p">;</span>

<span class="c1"># The cost function
</span>
<span class="n">minimize</span> <span class="n">cost</span><span class="p">:</span> 
 <span class="mi">1</span><span class="o">/</span><span class="n">M_e</span><span class="o">*</span><span class="p">(</span><span class="nb">sum</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">}</span> <span class="p">((</span><span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">Nt</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="n">uf1</span><span class="p">)</span><span class="o">^</span><span class="mi">2</span><span class="o">+</span><span class="p">(</span><span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">Nt</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="n">uf2</span><span class="p">)</span><span class="o">^</span><span class="mi">2</span><span class="p">))</span> <span class="o">+</span> <span class="mf">0.1</span><span class="o">/</span><span class="n">M_d</span><span class="o">/</span><span class="p">(</span><span class="n">Nt</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="p">(</span> <span class="nb">sum</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">}</span> <span class="p">((</span> <span class="n">kappa</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">]</span><span class="o">^</span><span class="mi">2</span><span class="p">))</span> <span class="p">);</span>
</code></pre></div></div>
<p>The dynamics need to be described in the form of restriction condition of states and control variables. In order to avoid divide-by-zero, we additionally put the restriction on the distance. Since our equation has unbounded interaction kernels, it is convenient to use Eulerâs forward method. Backward or central method may result unexpected high velocities by closing to the infinite values.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Restriction on distance
</span>
<span class="n">subject</span> <span class="n">to</span> <span class="n">distance</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">}</span> <span class="p">:</span>
		<span class="p">(</span><span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span><span class="o">+</span><span class="p">(</span><span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span> <span class="o">&gt;=</span> <span class="mf">0.001</span><span class="p">;</span>
<span class="c1"># Dynamics
</span>
<span class="n">subject</span> <span class="n">to</span> <span class="n">ue_dyn</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">:</span>
		<span class="p">(</span><span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">j</span><span class="p">]</span><span class="o">-</span><span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">])</span><span class="o">*</span><span class="n">Nt</span><span class="o">/</span><span class="n">T</span> <span class="o">=</span> <span class="n">ve</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">];</span>
<span class="n">subject</span> <span class="n">to</span> <span class="n">ud_dyn</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">:</span>
		<span class="p">(</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">j</span><span class="p">]</span><span class="o">-</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">])</span><span class="o">*</span><span class="n">Nt</span><span class="o">/</span><span class="n">T</span> <span class="o">=</span> <span class="n">vd</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">];</span>
<span class="n">subject</span> <span class="n">to</span> <span class="n">ve_dyn</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">:</span>
		<span class="p">(</span><span class="n">ve</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">j</span><span class="p">]</span><span class="o">-</span><span class="n">ve</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">])</span><span class="o">*</span><span class="n">Nt</span><span class="o">/</span><span class="n">T</span> <span class="o">=</span> <span class="nb">sum</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">}</span> <span class="p">(</span> <span class="o">-</span><span class="mi">2</span><span class="o">/</span><span class="p">((</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span><span class="o">+</span><span class="p">(</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">]</span> <span class="o">-</span> <span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">])</span> <span class="p">)</span>  <span class="o">-</span> <span class="mi">2</span><span class="o">*</span><span class="n">ve</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">];</span>
<span class="n">subject</span> <span class="n">to</span> <span class="n">vd1_dyn</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span> <span class="p">:</span>
		<span class="p">(</span><span class="n">vd</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="n">vd</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span><span class="o">*</span><span class="n">Nt</span><span class="o">/</span><span class="n">T</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mf">5.5</span><span class="o">/</span><span class="p">((</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span><span class="o">+</span><span class="p">(</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="mi">10</span><span class="o">/</span><span class="p">(((</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span><span class="o">+</span><span class="p">(</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span><span class="p">)</span><span class="o">^</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span> <span class="o">+</span> <span class="n">kappa</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="o">-</span><span class="p">(</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">]))</span> <span class="o">-</span> <span class="mi">2</span><span class="o">*</span><span class="n">vd</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">];</span>
<span class="n">subject</span> <span class="n">to</span> <span class="n">vd2_dyn</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span> <span class="p">:</span>
		<span class="p">(</span><span class="n">vd</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="n">vd</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span><span class="o">*</span><span class="n">Nt</span><span class="o">/</span><span class="n">T</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mf">5.5</span><span class="o">/</span><span class="p">((</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span><span class="o">+</span><span class="p">(</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="mi">10</span><span class="o">/</span><span class="p">(((</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span><span class="o">+</span><span class="p">(</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span><span class="o">^</span><span class="mi">2</span><span class="p">)</span><span class="o">^</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span> <span class="o">+</span> <span class="n">kappa</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="p">((</span><span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="n">uec</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">]))</span> <span class="o">-</span> <span class="mi">2</span><span class="o">*</span><span class="n">vd</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">];</span>
</code></pre></div></div>
<p>The next step is to solve and get the output. It is convenient to describe the parameters of the problem to visualize later.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Solve with IpOpt
</span>
<span class="n">option</span> <span class="n">solver</span> <span class="n">ipopt</span><span class="p">;</span>
<span class="n">option</span> <span class="n">ipopt_options</span> <span class="s">"max_iter=20000 linear_solver=mumps hessian_approximation=limited-memory halt_on_ampl_error yes"</span><span class="p">;</span>
<span class="n">solve</span><span class="p">;</span>
<span class="c1"># Display solution
</span>
<span class="n">printf</span> <span class="p">:</span> <span class="s">"</span><span class="si">%24.16</span><span class="s">e</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">T</span><span class="p">;</span>
<span class="n">printf</span> <span class="p">:</span> <span class="s">"</span><span class="si">%</span><span class="s">d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">Nt</span><span class="p">;</span>
<span class="n">printf</span> <span class="p">:</span> <span class="s">"</span><span class="si">%</span><span class="s">d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">M_d</span><span class="p">;</span>
<span class="n">printf</span> <span class="p">:</span> <span class="s">"</span><span class="si">%</span><span class="s">d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">M_e</span><span class="p">;</span>
<span class="n">printf</span> <span class="p">:</span> <span class="s">"</span><span class="si">%24.16</span><span class="s">e</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">uf1</span><span class="p">;</span>
<span class="n">printf</span> <span class="p">:</span> <span class="s">"</span><span class="si">%24.16</span><span class="s">e</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">uf2</span><span class="p">;</span>

<span class="n">printf</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">}</span> <span class="p">:</span> <span class="s">"</span><span class="si">%24.16</span><span class="s">e</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">kappa</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">];</span>
<span class="n">printf</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">:</span> <span class="s">"</span><span class="si">%24.16</span><span class="s">e</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">ue</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">];</span>
<span class="n">printf</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">:</span> <span class="s">"</span><span class="si">%24.16</span><span class="s">e</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">ud</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">];</span>
<span class="n">printf</span> <span class="p">{</span><span class="n">k</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_e</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">:</span> <span class="s">"</span><span class="si">%24.16</span><span class="s">e</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">ve</span><span class="p">[</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">];</span>
<span class="n">printf</span> <span class="p">{</span><span class="n">l</span> <span class="ow">in</span> <span class="mf">1.</span><span class="o">.</span><span class="n">M_d</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="mf">0.</span><span class="o">.</span><span class="n">Nt</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="mf">1..2</span><span class="p">}</span> <span class="p">:</span> <span class="s">"</span><span class="si">%24.16</span><span class="s">e</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">vd</span><span class="p">[</span><span class="n">l</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">];</span>
<span class="n">printf</span> <span class="p">:</span> <span class="s">"End. </span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
<span class="n">end</span><span class="p">;</span>

</code></pre></div></div>

<p>Finally, we used MATLAB to show the trajectories. After copying the result to a file âoutput.txtâ, we read it with the following code.</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fid</span><span class="o">=</span> <span class="nb">fopen</span><span class="p">(</span><span class="s1">'output.txt'</span><span class="p">,</span><span class="s1">'r'</span><span class="p">);</span>            <span class="c1">% Open out.txt</span>
<span class="n">temp</span> <span class="o">=</span> <span class="nb">fscanf</span><span class="p">(</span><span class="n">fid</span><span class="p">,</span><span class="s1">'%f'</span><span class="p">);</span>
<span class="n">M_d</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">M_e</span> <span class="o">=</span> <span class="mi">9</span><span class="p">;</span> <span class="n">index1</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="n">T</span> <span class="o">=</span> <span class="n">temp</span><span class="p">(</span><span class="n">index1</span><span class="p">);</span> <span class="n">index1</span> <span class="o">=</span> <span class="n">index1</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
<span class="n">Nt</span> <span class="o">=</span> <span class="n">temp</span><span class="p">(</span><span class="n">index1</span><span class="p">);</span> <span class="n">index1</span> <span class="o">=</span> <span class="n">index1</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
<span class="n">M_d</span> <span class="o">=</span> <span class="n">temp</span><span class="p">(</span><span class="n">index1</span><span class="p">);</span> <span class="n">index1</span> <span class="o">=</span> <span class="n">index1</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
<span class="n">M_e</span> <span class="o">=</span> <span class="n">temp</span><span class="p">(</span><span class="n">index1</span><span class="p">);</span> <span class="n">index1</span> <span class="o">=</span> <span class="n">index1</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
<span class="n">uf1</span> <span class="o">=</span> <span class="n">temp</span><span class="p">(</span><span class="n">index1</span><span class="p">);</span> <span class="n">index1</span> <span class="o">=</span> <span class="n">index1</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
<span class="n">uf2</span> <span class="o">=</span> <span class="n">temp</span><span class="p">(</span><span class="n">index1</span><span class="p">);</span> <span class="n">index1</span> <span class="o">=</span> <span class="n">index1</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="n">index2</span> <span class="o">=</span> <span class="n">index1</span><span class="o">+</span><span class="n">M_d</span><span class="o">*</span><span class="p">(</span><span class="n">Nt</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="n">kappa</span> <span class="o">=</span> <span class="n">temp</span><span class="p">(</span><span class="n">index1</span><span class="p">:</span><span class="n">index2</span><span class="p">);</span> <span class="n">kappa</span> <span class="o">=</span> <span class="nb">reshape</span><span class="p">(</span><span class="n">kappa</span><span class="p">,</span> <span class="p">[</span><span class="n">Nt</span><span class="o">+</span><span class="mi">1</span> <span class="n">M_d</span><span class="p">]);</span> <span class="n">index1</span> <span class="o">=</span> <span class="n">index2</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="n">index2</span> <span class="o">=</span> <span class="n">index1</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="n">Nt</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">M_e</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="n">ue</span> <span class="o">=</span> <span class="n">temp</span><span class="p">(</span><span class="n">index1</span><span class="p">:</span><span class="n">index2</span><span class="p">);</span> <span class="n">ue</span> <span class="o">=</span> <span class="nb">reshape</span><span class="p">(</span><span class="n">ue</span><span class="p">,</span> <span class="p">[</span><span class="mi">2</span> <span class="n">Nt</span><span class="o">+</span><span class="mi">1</span> <span class="n">M_e</span><span class="p">]);</span> <span class="n">index1</span> <span class="o">=</span> <span class="n">index2</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="n">index2</span> <span class="o">=</span> <span class="n">index1</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="n">Nt</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">M_d</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="n">ud</span> <span class="o">=</span> <span class="n">temp</span><span class="p">(</span><span class="n">index1</span><span class="p">:</span><span class="n">index2</span><span class="p">);</span> <span class="n">ud</span> <span class="o">=</span> <span class="nb">reshape</span><span class="p">(</span><span class="n">ud</span><span class="p">,</span> <span class="p">[</span><span class="mi">2</span> <span class="n">Nt</span><span class="o">+</span><span class="mi">1</span> <span class="n">M_d</span><span class="p">]);</span> <span class="n">index1</span> <span class="o">=</span> <span class="n">index2</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="n">index2</span> <span class="o">=</span> <span class="n">index1</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="n">Nt</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">M_e</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="n">ve</span> <span class="o">=</span> <span class="n">temp</span><span class="p">(</span><span class="n">index1</span><span class="p">:</span><span class="n">index2</span><span class="p">);</span> <span class="n">ve</span> <span class="o">=</span> <span class="nb">reshape</span><span class="p">(</span><span class="n">ve</span><span class="p">,</span> <span class="p">[</span><span class="mi">2</span> <span class="n">Nt</span><span class="o">+</span><span class="mi">1</span> <span class="n">M_e</span><span class="p">]);</span> <span class="n">index1</span> <span class="o">=</span> <span class="n">index2</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="n">index2</span> <span class="o">=</span> <span class="n">index1</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="n">Nt</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">M_d</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="n">vd</span> <span class="o">=</span> <span class="n">temp</span><span class="p">(</span><span class="n">index1</span><span class="p">:</span><span class="n">index2</span><span class="p">);</span> <span class="n">vd</span> <span class="o">=</span> <span class="nb">reshape</span><span class="p">(</span><span class="n">vd</span><span class="p">,</span> <span class="p">[</span><span class="mi">2</span> <span class="n">Nt</span><span class="o">+</span><span class="mi">1</span> <span class="n">M_d</span><span class="p">]);</span> 
<span class="n">index2</span> <span class="o">==</span> <span class="nb">length</span><span class="p">(</span><span class="n">temp</span><span class="p">)</span>      <span class="c1">% Check the file is properly read.</span>
<span class="n">tline</span> <span class="o">=</span> <span class="nb">linspace</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">Nt</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>

<span class="nb">fclose</span><span class="p">(</span><span class="n">fid</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">%% Cost calculation</span>

<span class="n">u_f</span> <span class="o">=</span> <span class="p">[</span><span class="n">uf1</span><span class="p">;</span><span class="n">uf2</span><span class="p">];</span>
<span class="n">Final_Time</span> <span class="o">=</span> <span class="n">tline</span><span class="p">(</span><span class="k">end</span><span class="p">);</span>
<span class="n">Final_Position</span> <span class="o">=</span> <span class="nb">reshape</span><span class="p">(</span><span class="n">ue</span><span class="p">(:,</span><span class="k">end</span><span class="p">,:),[</span><span class="mi">2</span> <span class="n">M_e</span><span class="p">]);</span>
<span class="n">Final_cost</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span> <span class="p">(</span><span class="n">Final_Position</span><span class="p">(</span><span class="mi">1</span><span class="p">,:)</span> <span class="o">-</span> <span class="n">u_f</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">.^</span><span class="mi">2</span><span class="o">+</span><span class="p">(</span><span class="n">Final_Position</span><span class="p">(</span><span class="mi">2</span><span class="p">,:)</span> <span class="o">-</span> <span class="n">u_f</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span><span class="o">.^</span><span class="mi">2</span> <span class="p">)/</span><span class="n">M_e</span><span class="p">;</span>
<span class="n">Running_cost</span> <span class="o">=</span> <span class="mf">0.001</span><span class="o">*</span><span class="nb">trapz</span><span class="p">(</span><span class="n">tline</span><span class="p">,</span><span class="nb">mean</span><span class="p">(</span><span class="n">kappa</span><span class="p">(:,</span><span class="mi">1</span><span class="p">:</span><span class="n">M_d</span><span class="p">)</span><span class="o">.^</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">))/</span><span class="n">M_d</span><span class="p">;</span>

<span class="c1">%% Visualize the trajectories</span>

<span class="n">f1</span> <span class="o">=</span> <span class="nb">figure</span><span class="p">(</span><span class="s1">'position'</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1000</span><span class="p">,</span> <span class="mi">400</span><span class="p">]);</span>
<span class="nb">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="nb">hold</span> <span class="n">on</span>
<span class="k">for</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="p">:</span><span class="n">M_d</span>
	<span class="nb">plot</span><span class="p">(</span><span class="n">ud</span><span class="p">(</span><span class="mi">1</span><span class="p">,:,</span><span class="n">k</span><span class="p">),</span><span class="n">ud</span><span class="p">(</span><span class="mi">2</span><span class="p">,:,</span><span class="n">k</span><span class="p">),</span><span class="s1">'b--'</span><span class="p">,</span><span class="s1">'LineWidth'</span><span class="p">,</span><span class="mf">1.3</span><span class="p">);</span>
<span class="k">end</span>
<span class="k">for</span> <span class="n">l</span> <span class="o">=</span> <span class="mi">1</span><span class="p">:</span><span class="n">M_e</span>
	<span class="nb">plot</span><span class="p">(</span><span class="n">ue</span><span class="p">(</span><span class="mi">1</span><span class="p">,:,</span><span class="n">l</span><span class="p">),</span><span class="n">ue</span><span class="p">(</span><span class="mi">2</span><span class="p">,:,</span><span class="n">l</span><span class="p">),</span><span class="s1">'r-'</span><span class="p">,</span><span class="s1">'LineWidth'</span><span class="p">,</span><span class="mf">1.5</span><span class="p">);</span>
<span class="k">end</span>
<span class="nb">xlabel</span><span class="p">(</span><span class="s1">'abscissa'</span><span class="p">)</span>
<span class="nb">ylabel</span><span class="p">(</span><span class="s1">'ordinate'</span><span class="p">)</span>
<span class="nb">title</span><span class="p">([</span><span class="s1">'Position error = '</span><span class="p">,</span> <span class="nb">num2str</span><span class="p">(</span><span class="n">Final_cost</span><span class="p">)])</span>
<span class="nb">grid</span> <span class="n">on</span>
</code></pre></div></div>

<p>Then, one can get the following trajectories and optimal control solution.</p>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0026/D2E16_figure.png" alt="Figure1" /></p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">plot</span><span class="p">(</span><span class="n">tline</span><span class="p">,</span><span class="n">kappa</span><span class="s1">','</span><span class="n">LineWidth</span><span class="o">'</span><span class="p">,</span><span class="mf">1.3</span><span class="p">);</span>
<span class="nb">xlabel</span><span class="p">(</span><span class="s1">'Time'</span><span class="p">)</span>
<span class="nb">ylabel</span><span class="p">(</span><span class="s1">'Control \kappa(t)'</span><span class="p">)</span>
<span class="nb">title</span><span class="p">([</span><span class="s1">'Total Time = '</span><span class="p">,</span><span class="nb">num2str</span><span class="p">(</span><span class="n">tline</span><span class="p">(</span><span class="k">end</span><span class="p">)),</span><span class="s1">' and running cost = '</span><span class="p">,</span><span class="nb">num2str</span><span class="p">(</span><span class="n">Running_cost</span><span class="p">)])</span>
<span class="nb">grid</span> <span class="n">on</span>
</code></pre></div></div>

<p><img src="https://deustotech.github.io/DyCon-Blog/assets/imgs/WP99/P0026/D2E16_control.png" alt="Figure2" /></p>
:ET